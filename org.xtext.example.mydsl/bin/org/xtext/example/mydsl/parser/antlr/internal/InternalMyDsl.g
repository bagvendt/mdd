/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;
 	
    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "IntentModel";	
   	}
   	
   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleIntentModel
entryRuleIntentModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntentModelRule()); }
	 iv_ruleIntentModel=ruleIntentModel 
	 { $current=$iv_ruleIntentModel.current; } 
	 EOF 
;

// Rule IntentModel
ruleIntentModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntentModelAccess().getIntentModelAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=	'Model' 
    {
        newLeafNode(lv_name_1_0, grammarAccess.getIntentModelAccess().getNameModelKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntentModelRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_1_0, "Model");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIntentModelAccess().getEqualsSignKeyword_2());
    }
	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntentModelAccess().getLeftSquareBracketKeyword_3());
    }
(	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getIntentModelAccess().getLeftCurlyBracketKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntentModelAccess().getIntentsIntentParserRuleCall_4_1_0()); 
	    }
		lv_intents_5_0=ruleIntent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntentModelRule());
	        }
       		add(
       			$current, 
       			"intents",
        		lv_intents_5_0, 
        		"Intent");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIntentModelAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntentModelAccess().getIntentsIntentParserRuleCall_4_2_1_0()); 
	    }
		lv_intents_7_0=ruleIntent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntentModelRule());
	        }
       		add(
       			$current, 
       			"intents",
        		lv_intents_7_0, 
        		"Intent");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntentModelAccess().getRightCurlyBracketKeyword_4_3());
    }
)?	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIntentModelAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleIntent
entryRuleIntent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntentRule()); }
	 iv_ruleIntent=ruleIntent 
	 { $current=$iv_ruleIntent.current; } 
	 EOF 
;

// Rule Intent
ruleIntent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Type' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIntentAccess().getTypeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntentAccess().getColonKeyword_1());
    }
(
    { 
        newCompositeNode(grammarAccess.getIntentAccess().getExplicitIntentParserRuleCall_2_0()); 
    }
    this_ExplicitIntent_2=ruleExplicitIntent
    { 
        $current = $this_ExplicitIntent_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIntentAccess().getImplicitIntentParserRuleCall_2_1()); 
    }
    this_ImplicitIntent_3=ruleImplicitIntent
    { 
        $current = $this_ImplicitIntent_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIntentAccess().getBroadcastIntentParserRuleCall_2_2()); 
    }
    this_BroadcastIntent_4=ruleBroadcastIntent
    { 
        $current = $this_BroadcastIntent_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getIntentAccess().getServiceIntentParserRuleCall_2_3()); 
    }
    this_ServiceIntent_5=ruleServiceIntent
    { 
        $current = $this_ServiceIntent_5.current; 
        afterParserOrEnumRuleCall();
    }
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getIntentAccess().getCommaKeyword_3());
    }
((	otherlv_7='Name' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIntentAccess().getNameKeyword_4_0_0());
    }
	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getIntentAccess().getColonKeyword_4_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntentAccess().getNameEStringParserRuleCall_4_0_2_0()); 
	    }
		lv_name_9_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getIntentAccess().getCommaKeyword_4_0_3());
    }
)(	otherlv_11='Action' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getIntentAccess().getActionKeyword_4_1_0());
    }
	otherlv_12=':' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getIntentAccess().getColonKeyword_4_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntentAccess().getActionEStringParserRuleCall_4_1_2_0()); 
	    }
		lv_action_13_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntentRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_13_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getIntentAccess().getCommaKeyword_4_1_3());
    }
)(	otherlv_15='Category' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getIntentAccess().getCategoryKeyword_4_2_0());
    }
	otherlv_16=':' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getIntentAccess().getColonKeyword_4_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntentAccess().getCategoryEStringParserRuleCall_4_2_2_0()); 
	    }
		lv_category_17_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntentRule());
	        }
       		set(
       			$current, 
       			"category",
        		lv_category_17_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_18=',' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getIntentAccess().getCommaKeyword_4_2_3());
    }
)(	otherlv_19='DataURI' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getIntentAccess().getDataURIKeyword_4_3_0());
    }
	otherlv_20=':' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getIntentAccess().getColonKeyword_4_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntentAccess().getDataURIEStringParserRuleCall_4_3_2_0()); 
	    }
		lv_dataURI_21_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntentRule());
	        }
       		set(
       			$current, 
       			"dataURI",
        		lv_dataURI_21_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_22=',' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getIntentAccess().getCommaKeyword_4_3_3());
    }
)(	otherlv_23='DataExtra' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getIntentAccess().getDataExtraKeyword_4_4_0());
    }
	otherlv_24=':' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getIntentAccess().getColonKeyword_4_4_1());
    }
	otherlv_25='[' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getIntentAccess().getLeftSquareBracketKeyword_4_4_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntentAccess().getExtraDataExtraDataParserRuleCall_4_4_3_0()); 
	    }
		lv_extraData_26_0=ruleExtraData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntentRule());
	        }
       		add(
       			$current, 
       			"extraData",
        		lv_extraData_26_0, 
        		"ExtraData");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_27=',' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getIntentAccess().getCommaKeyword_4_4_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntentAccess().getExtraDataExtraDataParserRuleCall_4_4_4_1_0()); 
	    }
		lv_extraData_28_0=ruleExtraData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntentRule());
	        }
       		add(
       			$current, 
       			"extraData",
        		lv_extraData_28_0, 
        		"ExtraData");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_29=']' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getIntentAccess().getRightSquareBracketKeyword_4_4_5());
    }
	otherlv_30=',' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getIntentAccess().getCommaKeyword_4_4_6());
    }
)?(	otherlv_31='ReturnData' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getIntentAccess().getReturnDataKeyword_4_5_0());
    }
	otherlv_32=':' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getIntentAccess().getColonKeyword_4_5_1());
    }
	otherlv_33='[' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getIntentAccess().getLeftSquareBracketKeyword_4_5_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntentAccess().getReturnDataExtraDataParserRuleCall_4_5_3_0()); 
	    }
		lv_returnData_34_0=ruleExtraData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntentRule());
	        }
       		add(
       			$current, 
       			"returnData",
        		lv_returnData_34_0, 
        		"ExtraData");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_35=',' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getIntentAccess().getCommaKeyword_4_5_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntentAccess().getReturnDataExtraDataParserRuleCall_4_5_4_1_0()); 
	    }
		lv_returnData_36_0=ruleExtraData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntentRule());
	        }
       		add(
       			$current, 
       			"returnData",
        		lv_returnData_36_0, 
        		"ExtraData");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_37=']' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getIntentAccess().getRightSquareBracketKeyword_4_5_5());
    }
	otherlv_38=',' 
    {
    	newLeafNode(otherlv_38, grammarAccess.getIntentAccess().getCommaKeyword_4_5_6());
    }
)?))
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleExtraData
entryRuleExtraData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtraDataRule()); }
	 iv_ruleExtraData=ruleExtraData 
	 { $current=$iv_ruleExtraData.current; } 
	 EOF 
;

// Rule ExtraData
ruleExtraData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExtraDataAccess().getExtraDataAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExtraDataAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='Name' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExtraDataAccess().getNameKeyword_2_0());
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExtraDataAccess().getColonKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtraDataAccess().getNameEStringParserRuleCall_2_2_0()); 
	    }
		lv_name_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtraDataRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_5='Type' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExtraDataAccess().getTypeKeyword_3_0());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExtraDataAccess().getColonKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExtraDataAccess().getTypeEStringParserRuleCall_3_2_0()); 
	    }
		lv_type_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExtraDataRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getExtraDataAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleExplicitIntent
entryRuleExplicitIntent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExplicitIntentRule()); }
	 iv_ruleExplicitIntent=ruleExplicitIntent 
	 { $current=$iv_ruleExplicitIntent.current; } 
	 EOF 
;

// Rule ExplicitIntent
ruleExplicitIntent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExplicitIntentAccess().getExplicitIntentAction_0(),
            $current);
    }
)	otherlv_1='\'ExplicitIntent\'' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExplicitIntentAccess().getExplicitIntentKeyword_1());
    }
)
;





// Entry rule entryRuleImplicitIntent
entryRuleImplicitIntent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImplicitIntentRule()); }
	 iv_ruleImplicitIntent=ruleImplicitIntent 
	 { $current=$iv_ruleImplicitIntent.current; } 
	 EOF 
;

// Rule ImplicitIntent
ruleImplicitIntent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getImplicitIntentAccess().getImplicitIntentAction_0(),
            $current);
    }
)	otherlv_1='\'ImplicitIntent\'' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getImplicitIntentAccess().getImplicitIntentKeyword_1());
    }
)
;





// Entry rule entryRuleBroadcastIntent
entryRuleBroadcastIntent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBroadcastIntentRule()); }
	 iv_ruleBroadcastIntent=ruleBroadcastIntent 
	 { $current=$iv_ruleBroadcastIntent.current; } 
	 EOF 
;

// Rule BroadcastIntent
ruleBroadcastIntent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBroadcastIntentAccess().getBroadCastIntentAction_0(),
            $current);
    }
)	otherlv_1='\'BroadcastIntent\'' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBroadcastIntentAccess().getBroadcastIntentKeyword_1());
    }
)
;





// Entry rule entryRuleServiceIntent
entryRuleServiceIntent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceIntentRule()); }
	 iv_ruleServiceIntent=ruleServiceIntent 
	 { $current=$iv_ruleServiceIntent.current; } 
	 EOF 
;

// Rule ServiceIntent
ruleServiceIntent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getServiceIntentAccess().getServiceIntentAction_0(),
            $current);
    }
)	otherlv_1='\'ServiceIntent\'' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getServiceIntentAccess().getServiceIntentKeyword_1());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


